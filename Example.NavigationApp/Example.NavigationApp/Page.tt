// <auto-generated>
<#@ template language="C#" hostSpecific="true" debug="True" #>
<#@ output extension="cs" #>

<#@ assembly name="EnvDte" #>
<#@ assembly name="System.Core"#>

<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>

<#
    var ns = "Example.NavigationApp";
	var pages = "Pages";

	var visualStudio = (this.Host as IServiceProvider).GetService(typeof(EnvDTE.DTE)) as EnvDTE.DTE;
    var project = visualStudio.Solution.FindProjectItem(this.Host.TemplateFile).ContainingProject as EnvDTE.Project;
    var root = Host.ResolvePath(pages);
	var items = project.ProjectItems
		.Cast<EnvDTE.ProjectItem>()
		.Where(x => x.FileNames[0].Substring(0, x.FileNames[0].Length - 1) == root)
		.First()
		.ProjectItems;
#>

namespace <#= ns #>
{
    public static class Page
    {
<#
    PushIndent("    ");
    CreatePage(items, root);
	ClearIndent();
#>
    }
}

<#+
void CreatePage(EnvDTE.ProjectItems items, string root)
{
    PushIndent("    ");

    foreach (EnvDTE.ProjectItem item in items)
	{
	    if (!item.FileNames[0].StartsWith(root))
		{
		    continue;
		}

		if (item.Kind == EnvDTE.Constants.vsProjectItemKindPhysicalFolder)
		{
		    if (item.FileNames[0] != root)
			{
				WriteLine("public static class " + item.Name);
				WriteLine("{");
			}

			CreatePage(item.ProjectItems, root);

		    if (item.FileNames[0] != root)
			{
	    	    WriteLine("}");
    		    WriteLine("");
			}
		}
		else if (item.Name.EndsWith("Page.xaml"))
		{
		    var name = item.Name.Substring(0, item.Name.Length - 9);
		    var path = item.FileNames[0].Substring(root.Length).Replace('\\', '/');
			path = path.Substring(0, path.Length - 5);
		    WriteLine("public const string " + name + " = \"" + path + "\";");
		    WriteLine("");
		}
	}

	PopIndent();
}
#>
